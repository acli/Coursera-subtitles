1
00:00:00,000 --> 00:00:04,099
So far we've talked a lot about strategies
and techniques for designing user

2
00:00:04,099 --> 00:00:10,036
interfaces and we've talked a little bit
about high level principals. What I'd like

3
00:00:10,036 --> 00:00:15,081
to do now is to kind of dive deep and get
down to brass tax and talk about a number

4
00:00:15,081 --> 00:00:20,047
of concrete examples And so these lectures
are gonna offer two benefits

5
00:00:20,047 --> 00:00:25,092
simultaneously. First, what I'd like to do
in these next couple lectures is introduce

6
00:00:25,092 --> 00:00:31,004
a set of design heuristics for identifying
interface errors and strategies for

7
00:00:31,004 --> 00:00:36,052
correcting them. Second, I'd like to walk
you through a number of examples of actual

8
00:00:36,052 --> 00:00:42,002
user interfaces, and talk about particular
ways in which they're successful or have

9
00:00:42,002 --> 00:00:47,045
problems. Now, these are all screen shots
that I've gathered over several years And

10
00:00:47,045 --> 00:00:52,003
I keep a big file of, Interfaces that I
think are, are effective or that have

11
00:00:52,003 --> 00:00:56,076
problems, and it's a good activity. I
encourage you to do the same thing. For

12
00:00:56,076 --> 00:01:01,030
any voyeurs out there, you'll get a sense
of interfaces that I've stumbled across

13
00:01:01,030 --> 00:01:05,062
over the last several years. It's not a
very exciting list, but, hey And all of

14
00:01:05,062 --> 00:01:10,033
these interfaces are things that may come
up again when we talk about visual design

15
00:01:10,033 --> 00:01:14,082
and other principles. So some of these
screen shots you'll see multiple times in

16
00:01:14,082 --> 00:01:20,009
this class. Finally, I'd like to emphasize
that we really wanna focus on narrow

17
00:01:20,009 --> 00:01:25,071
issues in these user interfaces And I'm
not gonna talk about whether the broader

18
00:01:25,071 --> 00:01:31,020
ecosystem that the particular thing we're
looking at is effective or not. So, we

19
00:01:31,020 --> 00:01:36,040
point, we may point out flaws in
interfaces that are on the whole exemplary

20
00:01:36,040 --> 00:01:41,068
Or we may point out successes in
interfaces that are on the whole not quite

21
00:01:41,068 --> 00:01:46,064
so good And finally, because I've gathered
these screen shots over a number of years,

22
00:01:46,064 --> 00:01:51,021
many of these interfaces no longer look
like this. The point is not the current

23
00:01:51,021 --> 00:01:55,056
state of an interface, but rather the
didactical of teaching your principle.

24
00:01:56,051 --> 00:02:01,021
Here are the ten design heuristics that
we're going to talk about. Some of these

25
00:02:01,021 --> 00:02:05,073
names are mine. The principles are based
on Jacob Nielson's work, in heuristic

26
00:02:05,073 --> 00:02:10,043
evaluation. I've simply relabele d a few
of them to make them, I think, clearer and

27
00:02:10,043 --> 00:02:17,052
shorter And so let's jump in. The first of
these principles is show system status. I

28
00:02:17,052 --> 00:02:23,014
think one of the most important things you
can do in user interface design is provide

29
00:02:23,014 --> 00:02:28,030
excellent feedback about where the system
is and where the user is in a larger

30
00:02:28,030 --> 00:02:33,060
interaction flow. One important thing to
provide feedback about is where the user

31
00:02:33,060 --> 00:02:38,071
is in time. If you have an interactive
system where the response time is less

32
00:02:38,071 --> 00:02:43,037
than a second or so, there is no need to
have intermediate feedback. It just feels

33
00:02:43,037 --> 00:02:48,020
interactive. As you get something gets on
the order of a second or a couple of

34
00:02:48,020 --> 00:02:53,035
seconds, it becomes important to provide
some kind of feedback that an activity is

35
00:02:53,035 --> 00:02:58,006
underway. You can think of this as
hour-glass or a spinning-ball, and if you

36
00:02:58,006 --> 00:03:03,002
get to something more than a couple of
seconds, it's useful to show progress of

37
00:03:03,002 --> 00:03:08,023
how far or long in activity that user is.
Here we see an example of installation of

38
00:03:08,023 --> 00:03:13,026
a piece of software And you can see the
same thing if you ask a user to fill out a

39
00:03:13,026 --> 00:03:18,006
survey or when they're completing their
taxes, or any other process that takes a

40
00:03:18,006 --> 00:03:23,016
long time or may require multiple steps of
input. You'll want to give people feedback

41
00:03:23,016 --> 00:03:30,093
about how far through the system is and
how far through they are Second important

42
00:03:30,093 --> 00:03:35,098
category of things to provide feedback
about and to show to the user is space.

43
00:03:35,098 --> 00:03:41,002
Here's a screen shot from Gmail which
notified me that I was out of the space

44
00:03:41,002 --> 00:03:47,017
allocated to me and that means that I need
to do something about it. The third

45
00:03:47,017 --> 00:03:51,072
important thing to show feed, people
feedback about is change. Here we have a

46
00:03:51,072 --> 00:03:56,027
dialogue box that says, you've changed
this document, do you wanna save those

47
00:03:56,027 --> 00:04:01,032
changes or don't save them Our [inaudible]
action. Here's a stoplight. So the red

48
00:04:01,032 --> 00:04:06,078
light means stop, the green light means go
and I like this user interface, because it

49
00:04:06,078 --> 00:04:11,071
uses a redundant coding to provide
feedback to the user. So the red light is

50
00:04:11,071 --> 00:04:17,003
not only using red as a color, but it is
up at the top of the screen and the green

51
00:04:17,003 --> 00:04:22,035
light is also always at the bottom. In
this cons istency in the dual coding both

52
00:04:22,035 --> 00:04:27,054
makes it faster to recognize and it helps
work for a broader class of users. For

53
00:04:27,054 --> 00:04:33,085
example, not all users may be able to
distinguish red from green. Especially in

54
00:04:33,085 --> 00:04:38,055
an online world it can be important to
show feedback about next steps. Here's a

55
00:04:38,055 --> 00:04:43,037
screen shot from Amazon that says your
message was sent to the seller and a copy

56
00:04:43,037 --> 00:04:47,095
was sent to the email address of your
account. The seller will respond to you

57
00:04:47,095 --> 00:04:52,065
directly via email. So we're letting the
user know what is going to happen next.

58
00:04:52,065 --> 00:04:57,058
That's important because otherwise you can
wonder, was the message actually sent? Or,

59
00:04:57,058 --> 00:05:02,034
did anybody get it? Or when they receive
it what are they gonna do? This lays out

60
00:05:02,034 --> 00:05:07,015
very clearly what has happened and what
will happen next And after you've crossed

61
00:05:07,015 --> 00:05:11,034
time, space, change actions and next
steps. The last thing you wanna show is

62
00:05:11,034 --> 00:05:15,087
completion. I also like this dialogue box
because it's funny And a little bit of

63
00:05:15,087 --> 00:05:20,060
humor can be really effective in user
interfaces. Our second heuristic is to use

64
00:05:20,060 --> 00:05:25,096
familiar metaphors and language, and often
this can mean trying to provide a match in

65
00:05:25,096 --> 00:05:30,088
the interface with things that people are
familiar with from their real-world

66
00:05:30,088 --> 00:05:35,068
experience. This also means speak the
user's language, and follow conventions

67
00:05:35,068 --> 00:05:40,059
that they're familiar with both in the
online world and in the real world. One

68
00:05:40,059 --> 00:05:45,001
important kind of familiarity is
metaphors. In this interface, I want to

69
00:05:45,001 --> 00:05:49,081
call your attention to the world in
miniature that's being used in the print

70
00:05:49,081 --> 00:05:54,079
dialogue box, and that's an effective user
interface because it makes very clear

71
00:05:54,079 --> 00:05:59,089
which pieces of the page are gonna to be
cropped and which pieces of the page are

72
00:05:59,089 --> 00:06:04,083
gonna to be printed. In general, one of
the successes of the graphical user

73
00:06:04,083 --> 00:06:09,081
interface is that it leverages a lot of
real world metaphors like desktop and

74
00:06:09,081 --> 00:06:14,090
trash and files and folders And if these
are activities that users are familiar

75
00:06:14,090 --> 00:06:19,094
with, it can help bring them into a new
online world. Now over the last 25 years

76
00:06:19,094 --> 00:06:24,065
as more and more people have gotten
accustomed to computing, some of those

77
00:06:24,065 --> 00:06:30,000
real world metaphors have fallen away and
newer ones have developed. Remember that

78
00:06:30,000 --> 00:06:35,096
the reader of your interface is going to
be a user and not your colleague, boss, or

79
00:06:35,096 --> 00:06:41,055
lawyer And consequently, work hard to
identify terms in language that will be

80
00:06:41,055 --> 00:06:47,044
familiar to them. Here's a screenshot from
a student loan website And it uses two

81
00:06:47,044 --> 00:06:53,069
terms that at least I was unfamiliar with
It talked about me being hourly enrolled

82
00:06:53,069 --> 00:06:59,050
in electronic correspondence And it said
that I was not eligible for electronic

83
00:06:59,050 --> 00:07:05,024
bill presentment. What it really means by
this I think is just email And so it

84
00:07:05,024 --> 00:07:10,071
should say that and I don't think of
myself as being enrolled in an email

85
00:07:10,071 --> 00:07:16,078
correspondence service. It would be nicer
if it just said. We're sending you email,

86
00:07:16,078 --> 00:07:22,037
and there's some fine print about why I'm
not eligible for electronic bill

87
00:07:22,037 --> 00:07:28,033
presentment. It would be much clearer if,
for starters, it actually identified the

88
00:07:28,033 --> 00:07:33,092
reason in my particular case this has
passed a log in wall, so it knows the

89
00:07:33,092 --> 00:07:40,013
reason And it would be nicer if were able
to us more common terms, like. We're

90
00:07:40,013 --> 00:07:47,056
unable to send you bills and email because
Maybe we don't have an address on file And

91
00:07:47,056 --> 00:07:53,062
it's important to use familiar categories.
Here's an example from a Visa website that

92
00:07:53,062 --> 00:07:59,026
asks users to select a state And, I got a
kick out of it because there are. More

93
00:07:59,026 --> 00:08:05,015
than 50 states here. In fact, there's a
separate listing for northern California

94
00:08:05,015 --> 00:08:10,037
and southern California And many people in
San Francisco might wish that Northern

95
00:08:10,037 --> 00:08:15,018
California and Southern California were
different states and for many people,

96
00:08:15,018 --> 00:08:20,017
which of those they live in or believe
they live in is clear But for some users,

97
00:08:20,017 --> 00:08:25,029
this maybe ambiguous and it would probably
be simpler if you just elected California

98
00:08:25,029 --> 00:08:30,004
and then the system decided whether it use
its Southern California routing or

99
00:08:30,004 --> 00:08:35,003
Northern California Routing based on the
address that you provide later. And it's

100
00:08:35,003 --> 00:08:41,004
important that the choices that you offer.
To people, are things that they're likely

101
00:08:41,004 --> 00:08:47,020
to be familiar with. Here, is a dialogue
box that says that you have a document and

102
00:08:47,020 --> 00:08:52,079
coding mismatch. You're, you've got a d
ocument which describes itself as being

103
00:08:52,079 --> 00:08:58,092
Utf-8 no BOM But, the encoding has been
set, to Western Iso Latin one. Now this is

104
00:08:58,092 --> 00:09:05,016
a developer tool and so it's reasonable to
expect some fluency with things that are

105
00:09:05,016 --> 00:09:11,004
under the hood like users may in general,
be familiar with the idea that there are

106
00:09:11,004 --> 00:09:16,086
different character sets for documents.
But users maybe not familiar with what

107
00:09:16,086 --> 00:09:22,067
exactly the difference is between UTF8
[inaudible] and Iso Latin one or which of

108
00:09:22,067 --> 00:09:28,041
them they should select, or how exactly
they should go about fixing this problem.

109
00:09:29,044 --> 00:09:34,062
One way that this interface could be
improved is beaconing what the most common

110
00:09:34,062 --> 00:09:40,032
solution is likely to be. A third here is
to [inaudible] user control and freedom

111
00:09:40,032 --> 00:09:45,049
and this is gonna encompass a number of
things like exits for mistaken choices The

112
00:09:45,049 --> 00:09:50,073
ability to undo and redo, not forcing
people down fixed paths. I think of this

113
00:09:50,073 --> 00:09:55,062
heuristic as being about making sure that
the amount of control and freedom is

114
00:09:55,062 --> 00:10:00,077
appropriate for the users and appropriate
for the tasks. So for example, if you have

115
00:10:00,077 --> 00:10:05,079
an interface that somebody's only gonna
use once, a relatively constrained wizard

116
00:10:05,079 --> 00:10:10,074
may actually be a good solution. However
you may also want an, a way for users to

117
00:10:10,074 --> 00:10:15,083
break out of that constrained wizard if
they know what they're doing and are more

118
00:10:15,083 --> 00:10:20,048
expert. Or have an uncommon or unique
activity that they need to accomplish.

119
00:10:21,017 --> 00:10:26,015
Here's an example from a conference
registration site and what you can see is

120
00:10:26,015 --> 00:10:32,035
that there's a continue button, but no
back button. Here's an interface that

121
00:10:32,035 --> 00:10:37,040
provides more control and freedom in the
context of browsing for airline tickets.

122
00:10:37,040 --> 00:10:43,009
What you see here is that there are a
number of different ways in which the user

123
00:10:43,009 --> 00:10:48,063
can browse through the space of possible
information. In particular you can see

124
00:10:48,063 --> 00:10:54,060
this calendar widget in the top left Which
shows you the fares for every day of that

125
00:10:54,060 --> 00:11:00,021
month And this ability to preview what's
likely to be down a particular path is

126
00:11:00,021 --> 00:11:05,047
really valuable in helping people make
decisions and know what options are

127
00:11:05,047 --> 00:11:10,080
available to them. Our fourth heuristic is
consistency and standar ds And this

128
00:11:10,080 --> 00:11:16,051
includes things like consistent layout.
Here's a screenshot of a very old, set of

129
00:11:16,051 --> 00:11:22,023
dialogue box options from, Microsoft's
Visual Basic. This is many years old at

130
00:11:22,023 --> 00:11:27,035
this point. It's pedagogically useful,
because there are four different options

131
00:11:27,035 --> 00:11:32,037
for where the same set of buttons could
be. And probably, applications will be

132
00:11:32,037 --> 00:11:37,052
easiest to learn if users can come to
expect that the same buttons will always

133
00:11:37,052 --> 00:11:42,059
be in the same locations. We talked
already about familiar language. It's also

134
00:11:42,059 --> 00:11:48,008
important to be consistent in your use of
language. And one thing that I've seen on

135
00:11:48,008 --> 00:11:53,030
the forums is, in teaching this class,
whenever we've used terms interchangeably,

136
00:11:53,030 --> 00:11:58,059
that's often been a source of confusion.
And you can see that in this web site. I

137
00:11:58,059 --> 00:12:04,021
arrived at this screen because I wanted to
get help with a USB cellular modem that I

138
00:12:04,021 --> 00:12:09,063
had, and I couldn't figure out which of
these categories was most likely to be the

139
00:12:09,063 --> 00:12:14,093
right one. My guess is that these
categories were generated based on

140
00:12:14,093 --> 00:12:20,059
organizational chart for the business
rather than based on consumer's conceptual

141
00:12:20,059 --> 00:12:25,083
model of what they care about. So, for
example, national access and broadband

142
00:12:25,083 --> 00:12:31,063
access may be different parts of business
and have different management structures

143
00:12:31,063 --> 00:12:37,036
But from user's perspective, they may not
know whether the mobile device they have,

144
00:12:37,036 --> 00:12:42,089
is of one category or the other. So how do
you solve this naming problem? Because I

145
00:12:42,089 --> 00:12:47,026
think that, once you get familiar with
your own products and designs, it's easy

146
00:12:47,026 --> 00:12:51,063
to refer to them using the terms that
you're familiar with And, to some extent,

147
00:12:51,063 --> 00:12:55,072
eventually training people up on these
terms will be useful for everyone.

148
00:12:56,013 --> 00:13:00,098
However, you'll often want to elicit what
terminology users use naturally and ensure

149
00:13:00,098 --> 00:13:05,053
sure that you use that consistency. This
is actually a case where field work, or

150
00:13:05,053 --> 00:13:09,097
focus groups, or other kinds of direct
user engagement can be really valuable,

151
00:13:09,097 --> 00:13:14,047
and you can ask people how they would
describe certain things that they might

152
00:13:14,047 --> 00:13:19,033
want to get help with. Another thing that
you can do is if you prefer a more, a more

153
00:13:19,033 --> 00:13:23,063
web based strategy. You can have a
category initially that you call other,

154
00:13:23,063 --> 00:13:28,023
and let people type in whatever they want
And then you can look at the set of

155
00:13:28,023 --> 00:13:33,012
responses that come in for other, and use
that to generate umbrellas terms that may

156
00:13:33,012 --> 00:13:38,073
be more user centered in terms of the
language they use. Here is a screenshot of

157
00:13:38,073 --> 00:13:44,030
the license repair utility and has a
warning about the fact that you will need

158
00:13:44,030 --> 00:13:49,095
to close all other adobe applications
before proceeding with the license repair

159
00:13:49,095 --> 00:13:55,017
utility to reasonable constraints. And it
says, "Do you wish to blank." I have

160
00:13:55,017 --> 00:14:02,042
blocked it out. Yes or no. My guess is
that a good fraction of you, maybe even

161
00:14:02,042 --> 00:14:10,075
most of you would guess that do you wish
to, the next thing would be continue And

162
00:14:10,075 --> 00:14:16,070
so you might press yes. However, what we
actually have here is do you wish to

163
00:14:16,070 --> 00:14:20,093
cancel And so, if you press yes to
continue. It's going to drop you out of

164
00:14:20,093 --> 00:14:25,033
the application and you'll wonder what
happened Or if you press no, with the

165
00:14:25,033 --> 00:14:29,050
intent to cancel. You'll actually
continue, and you may run into problems.

166
00:14:30,010 --> 00:14:35,079
In this particular case one way that you
can solve this problem about what yes or

167
00:14:35,079 --> 00:14:41,050
no or okay or cancel mean is to replace
yes no okay and cancel with more specific

168
00:14:41,050 --> 00:14:46,071
options. So here we see a dialogue box
where the options are very clear. One

169
00:14:46,071 --> 00:14:52,041
button says keep dot DO as the extension
name. The other one says use PDF And this

170
00:14:52,041 --> 00:14:57,066
is much clearer then okay and cancel or
yes and no. Our fifth [inaudible] is about

171
00:14:57,066 --> 00:15:02,024
preventing errors and there are lots of
errors that are easy to make and there are

172
00:15:02,024 --> 00:15:06,097
lots of ways that your interface can help
people prevent them. The first kind of

173
00:15:06,097 --> 00:15:12,060
error to prevent people from making is
data loss. Here we have a dialogue box

174
00:15:12,060 --> 00:15:18,051
that says this file already exists, and it
follows our message of having concrete

175
00:15:18,051 --> 00:15:24,021
button names. That's good. However I don't
know what that file looks like. If it

176
00:15:24,021 --> 00:15:30,037
offered me a preview it's much less likely
that I would mistake what that file is. In

177
00:15:30,037 --> 00:15:35,003
addition to preventing data loss, you can
also prevent cluttering duplicates. Here's

178
00:15:35,003 --> 00:15:39,057
a screenshot that helpfully notifies you
that this may be a du plicate paper that

179
00:15:39,057 --> 00:15:44,038
you're trying to import into a library. So
it says, "Hey, you've already got this on

180
00:15:44,038 --> 00:15:49,088
your computer." And so far as it goes,
that's great, but what I wanna know is, is

181
00:15:49,088 --> 00:15:55,045
what it thinks is a duplicate, actually a
duplicate? And so one button that ought to

182
00:15:55,045 --> 00:16:00,061
be available here, and that isn't, and
that would help me prevent errors, is by

183
00:16:00,061 --> 00:16:05,058
having of way of previewing what it
believes the duplicate file to be, and

184
00:16:05,058 --> 00:16:11,079
allows me to compare the two files, side
by side. Here's a dialogue box that says

185
00:16:11,079 --> 00:16:17,091
you have unsaved data. Click okay to go
back and save, or click cancel to continue

186
00:16:18,065 --> 00:16:23,001
there's a couple of problems here. For
starters we've got the click cancel to

187
00:16:23,001 --> 00:16:27,037
continue which I think may confuse many
people, and they'll consequently lose

188
00:16:27,037 --> 00:16:32,046
their unsafe data. Also, why isn't save
one of the options on the dialogue box?

189
00:16:32,046 --> 00:16:37,024
That would make a lot more sense. There
are many ways we could redesign this

190
00:16:37,024 --> 00:16:42,008
dialogue box. You could think about
automatically saving things or many other

191
00:16:42,008 --> 00:16:47,023
more drastic solutions. A simple solution
that we could make here is to [sound]

192
00:16:47,023 --> 00:16:55,070
reliable this first button to be call
this. Save, and the other button we might

193
00:16:55,070 --> 00:17:07,068
call "Don't Save." Just continue And we
will probably want the safe button to be

194
00:17:07,068 --> 00:17:13,011
the default action. One of the great
advantages of a graphical user interface

195
00:17:13,011 --> 00:17:18,028
is that it can leverage its visual
structure to enforce that users provide

196
00:17:18,028 --> 00:17:23,074
well formed input and to remind about what
parameters are necessary. So this for

197
00:17:23,074 --> 00:17:29,005
example is the find dialogue box in
Apple's keynote and you can contrast that

198
00:17:29,005 --> 00:17:34,064
with the find command in the terminal. In
the graphical case anything you can type

199
00:17:34,064 --> 00:17:40,023
into the dialogue box will be a reasonable
query to search for. It's impossible to

200
00:17:40,023 --> 00:17:45,024
have incorrect syntax. However in the
terminal case, you have to remember every

201
00:17:45,024 --> 00:17:50,046
time what exactly the syntax is. Now the
terminal has lots of power and is great in

202
00:17:50,046 --> 00:17:55,035
lots of ways But the ability to make
errors in terms of your syntax is one of

203
00:17:55,035 --> 00:18:00,006
its drawbacks But that doesn't mean that
just because you have a graphical

204
00:18:00,006 --> 00:18:04,090
interface, it automatically w ill have
this property preventing errors. This is

205
00:18:04,090 --> 00:18:09,061
an example of a scheduling system. And the
task that we're mid stream on, is

206
00:18:09,061 --> 00:18:14,075
scheduling a weekly meeting into a
conference room And there are some things

207
00:18:14,075 --> 00:18:19,067
that you need to fill out that it has
explicit drop downs for like time and

208
00:18:19,067 --> 00:18:24,077
room. However the day field is required.
It won't let you schedule for every day

209
00:18:24,077 --> 00:18:30,014
But it doesn't provide much in the way of
widgets to do that and so if the user is

210
00:18:30,014 --> 00:18:35,050
in a hurry, they might forget to enter a
day and it'll give an error like this that

211
00:18:35,050 --> 00:18:42,072
says no day is specified And what's
shocking is when you get to this point; it

212
00:18:42,072 --> 00:18:47,060
doesn't give you a chance to specify the
day. So, there are several ways that we

213
00:18:47,060 --> 00:18:52,047
might simply revise this interface. One is
that we might make the day selection

214
00:18:52,047 --> 00:18:57,010
widget clearer and more salient And the
other thing is, if somehow somebody

215
00:18:57,010 --> 00:19:02,003
forgets to specify a day. The next thing
that we show them would be an option to

216
00:19:02,003 --> 00:19:07,003
select which of the days that we want. As
opposed to just saying, no, I'm sorry you

217
00:19:07,003 --> 00:19:12,009
did it wrong And it's not clear at this
point how you would go back or start over

218
00:19:12,009 --> 00:19:17,011
to modify. Here's an example of a search
system that provides unnecessary

219
00:19:17,011 --> 00:19:21,028
constraints. I was searching for my
colleague, Dan Olson's book So I typed

220
00:19:21,028 --> 00:19:25,085
Olson into the search field, and enter And
I was hoping that it would give me a list

221
00:19:25,085 --> 00:19:30,005
of books, and I could select from among
them. However, it says, no, I'm sorry; you

222
00:19:30,005 --> 00:19:35,083
must select a catalog to begin your search
in. There are a number of implementation

223
00:19:35,083 --> 00:19:40,040
reasons why it might be preferable to
select a catalog And in fact, once we get

224
00:19:40,040 --> 00:19:44,056
going, I may even want to narrow by
catalog to improve the quality of my

225
00:19:44,056 --> 00:19:48,096
options But it doesn't seem like you
should need to select a catalog to get

226
00:19:48,096 --> 00:19:53,052
started, at least give me some results
based on any input. That's one thing that

227
00:19:53,052 --> 00:19:59,054
I think search systems, when implemented
well, do a fantastic job of Will continue

228
00:19:59,054 --> 00:20:02,001
our tour of heuristics in the next video.
