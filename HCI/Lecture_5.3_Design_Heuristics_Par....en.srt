1
00:00:01,002 --> 00:00:03,594
Let’s continue our journey of these design heuristics.

2
00:00:03,594 --> 00:00:07,757
Before we do, I’d like to remind you that many of the interfaces 

3
00:00:07,757 --> 00:00:12,392
that we’re going to look at could fit into multiple different multiple heuristics, 

4
00:00:12,392 --> 00:00:15,524
and the most important thing is to identify the problem.

5
00:00:15,524 --> 00:00:20,524
If you identify and fix the problem, the label is of secondary importance.

6
00:00:20,524 --> 00:00:24,540
Our next heuristic is recognition over recall.

7
00:00:24,540 --> 00:00:32,030
Create interfaces that make objects, actions, options, and directions visible or easily retrievable.

8
00:00:32,030 --> 00:00:37,781
And one of my favorite examples of this is any time you see a post it note, 

9
00:00:37,781 --> 00:00:44,150
that probably means that the relevant information isn’t as ready at hand as it ought to be.

10
00:00:44,150 --> 00:00:48,146
Here’s a photograph I took of one of our lunch meetings.

11
00:00:48,146 --> 00:00:51,632
And here you can see we have shwarma and felafel.

12
00:00:51,632 --> 00:00:54,020
They each have a number on them.

13
00:00:54,020 --> 00:01:00,544
And we have a code that’s used to distinguish which number means which kind of sandwich.

14
00:01:00,544 --> 00:01:06,605
And of course, the reason for this is that someone spent all their time making these delicious, 

15
00:01:06,605 --> 00:01:09,713
and didn’t take the time to write out the whole label on it.

16
00:01:09,713 --> 00:01:11,550
So it’s understandable and fixable.

17
00:01:11,550 --> 00:01:13,620
But, from an interface design perspective, 

18
00:01:13,620 --> 00:01:17,102
it would be faster to find the chicken shawarma if it was direc-, 

19
00:01:17,102 --> 00:01:21,423
written directly on there, as opposed to in code.

20
00:01:21,423 --> 00:01:22,230
.

21
00:01:22,230 --> 00:01:23,037
.

22
00:01:23,037 --> 00:01:27,805
Here’s a screen shot of a ticket-buying website, and what you can see 

23
00:01:27,805 --> 00:01:33,502
is that it gives you a couple of options like buy tickets for today or for a future day.

24
00:01:33,502 --> 00:01:38,245
There’s a couple of problems from a heuristics perspective with this screen For starters, 

25
00:01:38,245 --> 00:01:43,666
and we’ll get to this in a little bit, the layout is kind of all over the place.

26
00:01:43,666 --> 00:01:47,109
But also the thing that we’re going to look at here is the fact 

27
00:01:47,109 --> 00:01:53,092
that we have this intermediate screen which I think could be done away with, with clever design.

28
00:01:53,092 --> 00:01:55,486
It, for example, brings you to a page 

29
00:01:55,486 --> 00:02:01,119
that offers up show times for today and offers you a dialog box to switch the day.

30
00:02:01,119 --> 00:02:08,020
By setting up reasonable defaults you can avoid extra hurdles In addition to leading with reasonable defaults; 

31
00:02:08,020 --> 00:02:10,526
it can be valuable to provide previews.

32
00:02:10,526 --> 00:02:16,028
This is a screen shot of a web design too l where there are many templates available.

33
00:02:16,028 --> 00:02:22,245
However, all of the templates are shown in textural listing, which is not well suited for the task.

34
00:02:22,245 --> 00:02:28,669
You have to think through whether that’s what you want, and that’s a difficult thing to do reliably.

35
00:02:28,669 --> 00:02:35,335
By contrast this is a different web design tool that offers previews of all of the templates available, 

36
00:02:35,335 --> 00:02:39,521
and it’s much simpler to see if that’s the design that you’d like.

37
00:02:39,521 --> 00:02:43,271
Next up, flexibility and efficiency.

38
00:02:43,271 --> 00:02:45,858
And simple and straight forward example of this 

39
00:02:45,858 --> 00:02:52,051
is to provide keyboard accelerator shortcuts and similar things like that for experts.

40
00:02:52,051 --> 00:02:55,816
This is the view menu of the Firefox web browser.

41
00:02:55,816 --> 00:03:01,444
And this is a great example of offering flexibility and support for experts in two ways.

42
00:03:01,444 --> 00:03:05,371
First, we can see that there are keyboard shortcuts available.

43
00:03:05,371 --> 00:03:12,138
And second, the view source menu will let you retrieve the page source of any page you’re looking at.

44
00:03:12,138 --> 00:03:18,078
So you can look under the hood, not something that most people want to do, valuable for experts.

45
00:03:18,078 --> 00:03:20,091
This is the Expedia hotel search, 

46
00:03:20,091 --> 00:03:25,077
and it does a really nice job of making the common cases quite easy to get to.

47
00:03:25,077 --> 00:03:27,925
Popular cities are shown with a radio button.

48
00:03:27,925 --> 00:03:31,525
But also, if you’d like to go to a less popular city, 

49
00:03:31,525 --> 00:03:35,759
there’s a free entry field that you can type in anything that you want.

50
00:03:35,759 --> 00:03:38,873
And so this is a nice example of defaults with options.

51
00:03:38,873 --> 00:03:44,764
Flexible interfaces can also foreground and push rather than ambient information.

52
00:03:44,764 --> 00:03:47,092
This is a screen shot of busy cow, 

53
00:03:47,092 --> 00:03:52,369
which will allow you to view the weather forecast on your weekly view of your calendar.

54
00:03:52,369 --> 00:03:57,009
Here’s another example of productivity in the user interface.

55
00:03:57,009 --> 00:03:58,489
This is Google’s email.

56
00:03:58,489 --> 00:04:03,067
Which, if you click spam on a recipient that it knows how to unsubscribe you from, 

57
00:04:03,067 --> 00:04:08,912
it will offer the opportunity to directly unsubscribe you from that email as well.

58
00:04:08,912 --> 00:04:15,918
And I think this is an example of how, if you’re going to be proactive in an interface, you need to do it well.

59
00:04:15,918 --> 00:04:19,775
And offer a clear, immediate, task-relevant benefit.

60
00:04:19,775 --> 00:04:27,063
People generally don’t like proactive interfaces that distract, break flow, or provide irrelevant information.

61
00:04:27,063 --> 00:04:33,053
Another nice example of support for richer use is to offer recommendations on a particular page.

62
00:04:33,053 --> 00:04:39,442
And so here you can see if you like this one beverage here are other beverages you might like  

63
00:04:39,442 --> 00:04:48,359
and again, if you’re going to offer recommendations, or other kinds of pro activity, keep it relevant.

64
00:04:48,359 --> 00:04:51,803
This is an example from Amazon of discussion for a, for products 

65
00:04:51,803 --> 00:04:56,623
that are almost entirely unrelated to the product that is being shown.

66
00:04:56,623 --> 00:04:59,977
And it just distracts from the user’s main goal.

67
00:04:59,977 --> 00:05:03,616
Mostly they’re wondering why on Earth did these things end up 

68
00:05:03,616 --> 00:05:07,551
at the bottom of some completely unrelated webpage.

69
00:05:07,551 --> 00:05:11,142
And finally, flexibility can be incredibly valuable.

70
00:05:11,142 --> 00:05:13,688
It is possible to go overboard.

71
00:05:13,688 --> 00:05:18,687
This is a photograph from Bill Moggridge who shows an interview with a user 

72
00:05:18,687 --> 00:05:25,547
who had hacked their remote control to limit it to just the relevant functionality that they needed.

73
00:05:25,547 --> 00:05:31,213
And so, flexibility can sometimes be a tension with minimalism.

74
00:05:31,213 --> 00:05:36,775
Our eighth heuristic is aesthetic and minimalist design.

75
00:05:36,775 --> 00:05:40,190
When people view your webpage for example, 

76
00:05:40,190 --> 00:05:45,181
they’re viewing it on a screen, and so they see not the entire page.

77
00:05:45,181 --> 00:05:47,495
But one screen’s worth at a given time.

78
00:05:47,495 --> 00:05:50,263
What they see is what’s called above the fold.

79
00:05:50,263 --> 00:05:51,919
It comes from newspapers.

80
00:05:51,919 --> 00:05:55,482
Here’s an example of a screen where the relevant information, 

81
00:05:55,482 --> 00:06:00,055
what the weather forecast is, is not even visible anywhere above the fold.

82
00:06:00,055 --> 00:06:03,913
Everything above the fold is all of the chrome and extra stuff.

83
00:06:03,913 --> 00:06:07,034
But the core information you have to scroll down for.

84
00:06:07,034 --> 00:06:11,381
And to the extent that you’re trying to optimize for user experience, 

85
00:06:11,381 --> 00:06:18,122
it would be better to have the core information above the fold.

86
00:06:18,122 --> 00:06:24,212
As we’ll talk about in visual design, if you’re going to use color and other cues, 

87
00:06:24,212 --> 00:06:27,622
have them mean something, and do so judiciously.

88
00:06:27,622 --> 00:06:32,154
Here’s an example of a check out page that’s using lots of different colors, 

89
00:06:32,154 --> 00:06:40,020
and has a real cacophony in terms of its hierarchical organization on screen, for no apparent purpose.

90
00:06:40,020 --> 00:06:43,804
And here’s a screen shot from Goggle’s help system.

91
00:06:43,804 --> 00:06:49,578
Google is often thought of as an example of minimalist design and they often do this quit e well.

92
00:06:49,578 --> 00:06:55,180
I wanted to show one example where, I think, some more information could be stripped out, 

93
00:06:55,180 --> 00:06:58,547
or rather some more noise could be stripped out.

94
00:06:58,547 --> 00:07:01,769
And what I’m looking at in particular is this stuff here, 

95
00:07:01,769 --> 00:07:06,278
where all of the Table boarders and other stuff are what you most see, 

96
00:07:06,278 --> 00:07:11,147
whereas, what you actually most care about, is the data in the survey, 

97
00:07:11,147 --> 00:07:14,087
and, so, if you get rid of, all of the extra lines, 

98
00:07:14,087 --> 00:07:20,031
and chart junk, it could be clear to see, the parts that you carried most about.

99
00:07:20,031 --> 00:07:23,097
Here’s a log in screen that I think does a nice job 

100
00:07:23,097 --> 00:07:29,264
in keeping the email address in one place because it’s right up to here and then you get 

101
00:07:29,264 --> 00:07:34,206
to say whether or not you’re a returning customer or a new customer.

102
00:07:34,206 --> 00:07:39,161
If you’re a returning customer you enter your password or if you’re a new customer, 

103
00:07:39,161 --> 00:07:46,595
like the screen shows here, you create a new password and then type it in and go on from there.

104
00:07:46,595 --> 00:07:50,850
By contrast, this flight search website has the exact same information, 

105
00:07:50,850 --> 00:07:53,675
number of stops, in two separate places.

106
00:07:53,675 --> 00:07:56,630
And it’s possible that this increased clarity.

107
00:07:56,630 --> 00:08:02,665
However, there is a cost of complexity, and there’s also a cost of vertical screen real estate, 

108
00:08:02,665 --> 00:08:07,193
where by listing the same thing twice, you’re pushing other stuff down.

109
00:08:07,193 --> 00:08:12,645
Often by being dynamic about what you show or figuring out how to show things just once, 

110
00:08:12,645 --> 00:08:20,287
you can have all of the relevant information fit more clearly and in a less cluttered way on the screen.

111
00:08:20,287 --> 00:08:27,762
One of the easiest conceits to make as a design team is that the people using your site will care as deeply 

112
00:08:27,762 --> 00:08:32,524
and will want to spend as much time Using the site as you’ve spent building the site.

113
00:08:32,524 --> 00:08:37,385
And so it can be easy to have feature creep and lots of bells and whistles and do dads.

114
00:08:37,385 --> 00:08:39,880
But that’s not necessarily what people want.

115
00:08:39,880 --> 00:08:45,561
Here’s an example of a student loan website that offers you the ability to add widgets to your home screen.

116
00:08:45,561 --> 00:08:49,832
Now this is the kind of site that you log into probably a couple times a year?

117
00:08:49,832 --> 00:08:56,332
[laugh] It’s not likely to be a site that you’re going to want to [inaudible] with all sorts of gadgets.

118
00:08:56,332 --> 00:09:02,701
Next let’s talk about helping users recognize diagnose and recover from errors.

119
00:09:02,701 --> 00:09:07,282
One of the first steps of doing this is making the problem clearer, 

120
00:09:07,282 --> 00:09:15,027
here’s a hotel reservation site where all it says is: mistake, month, back.

121
00:09:15,027 --> 00:09:17,511
It’s hard to know what to do.

122
00:09:17,511 --> 00:09:20,109
Here’s one that’s a little bit better.

123
00:09:20,109 --> 00:09:22,685
It’s a registration site for an event.

124
00:09:22,685 --> 00:09:27,105
And what we see here is that it says you must fill out all the required fields.

125
00:09:27,105 --> 00:09:29,969
Okay, that’s a little better.

126
00:09:29,969 --> 00:09:32,121
But which fields didn’t I fill out?

127
00:09:32,121 --> 00:09:34,662
This page is screens and screens long.

128
00:09:34,662 --> 00:09:37,917
There’s lots and lots of things that need to be checked.

129
00:09:37,917 --> 00:09:41,416
Which of the myriad things on this page did I forget to check?

130
00:09:41,416 --> 00:09:46,127
Maybe you could show me just a page that has the one or two things forgotten 

131
00:09:46,127 --> 00:09:51,477
rather than the whole pile of stuff and force me to scroll through it again.

132
00:09:51,477 --> 00:09:56,566
Here’s a dialog box that shows the error and explains it clearly, 

133
00:09:56,566 --> 00:10:01,009
but it doesn’t offer you much in terms of solving the problem.

134
00:10:01,009 --> 00:10:04,029
It says that there’s not enough space on your iPod, too bad.

135
00:10:04,029 --> 00:10:09,666
A more effective solution would be to offer some view into what’s taking up all the space, 

136
00:10:09,666 --> 00:10:13,996
or to offer reasonable ways of limiting the amount of media 

137
00:10:13,996 --> 00:10:17,489
that you’re trying to put on the device so that it can all fit.

138
00:10:17,489 --> 00:10:23,620
And in this particular case, more recent versions of this application handle this problem better.

139
00:10:23,620 --> 00:10:31,080
A common mistake in writing error messages is to offer one dialog box for all of the possibilities.

140
00:10:31,080 --> 00:10:37,064
Here’s a screen shot of trying to open a file where it doesn’t know the file type.

141
00:10:37,064 --> 00:10:41,662
And it says, the application that you chose, null, could not found.

142
00:10:41,662 --> 00:10:45,695
Check the file name, or choose another application.

143
00:10:45,695 --> 00:10:50,307
Well this would be a whole lot better if we were speaking the user’s language.

144
00:10:50,307 --> 00:10:52,210
Null may not be the best choice.

145
00:10:52,210 --> 00:10:58,260
And also if we offered up a reasonable application for that file type.

146
00:10:58,260 --> 00:11:02,100
A lot of common tasks on the web are search based tasks.

147
00:11:02,100 --> 00:11:05,045
So here’s a screenshot from searching for a flight.

148
00:11:05,045 --> 00:11:10,634
Where the constraint specified yielded no possible solution For complex search tasks.

149
00:11:10,634 --> 00:11:15,827
If a user specifies an unreasonable set of constraints, one of the most powerful things 

150
00:11:15,827 --> 00:11:22,619
that you can do as a des igner is to offer a relaxation of those constraints that makes this more workable.

151
00:11:22,619 --> 00:11:27,408
Many years ago, I worked with Chuck Rich at Mitsubishi Research in Boston.

152
00:11:27,408 --> 00:11:30,558
And he was working on a research system called Collagen 

153
00:11:30,558 --> 00:11:34,042
that would find ways to intelligently relax these constraints.

154
00:11:34,042 --> 00:11:38,146
Among other things, to help users get their work done better.

155
00:11:38,146 --> 00:11:42,343
And this kind of smart relaxation can be a really powerful technique.

156
00:11:42,343 --> 00:11:45,984
I wanted to end talking about errors on a good note.

157
00:11:45,984 --> 00:11:50,486
Here’s a web browser dialog box that lets you know if you go to a URL 

158
00:11:50,486 --> 00:11:56,176
that it believes to be suspect, it will let you know that you probably don’t want to be here.

159
00:11:56,176 --> 00:12:01,246
And it offers to get you out of here and explain more about why this webpage was blocked.

160
00:12:01,246 --> 00:12:07,275
There’s probably future further innovations that could happen in this kind of error work.

161
00:12:07,275 --> 00:12:13,568
But I think that this is a pretty good darn start and a lot better than the way things used to be.

162
00:12:13,568 --> 00:12:19,326
And that brings us to our last heuristic, which is better help and documentation.

163
00:12:19,326 --> 00:12:25,607
It can be easy to think about help as somebody else’s problem and not part of the real App.

164
00:12:25,607 --> 00:12:31,002
Fortunately, I think on the web, help and documents have become more integrated.

165
00:12:31,002 --> 00:12:37,302
One of my favorite examples for this is learning programming systems where websites like PHP, 

166
00:12:37,302 --> 00:12:41,786
.NET can help you learn programming systems by providing new examples.

167
00:12:41,786 --> 00:12:45,397
Here is another example driven strategy from UPS’s website.

168
00:12:45,397 --> 00:12:49,149
It offers you the opportunity to subscribe to a number of mailing lists.

169
00:12:49,149 --> 00:12:53,005
And if you wonder what each of these mailing lists might give you; 

170
00:12:53,005 --> 00:12:56,211
on another screen I watched them together here.

171
00:12:56,211 --> 00:13:01,564
It will show you examples from each of those mailing lists of the content you are likely to receive.

172
00:13:01,564 --> 00:13:04,066
That’s a really powerful kind of preview strategy.

173
00:13:04,066 --> 00:13:08,827
And here is an example of a print dialog box to tell you what the problem is, 

174
00:13:08,827 --> 00:13:11,670
but doesn’t help you find the solution.

175
00:13:11,670 --> 00:13:17,853
For starters, I think somebody wants to know, is the stuff that’s outside the margins relevant?

176
00:13:17,853 --> 00:13:22,815
Is it just formally outside the margins, but nothing’s actually getting cut off, 

177
00:13:22,815 --> 00:13:28,407
or is there important document parts that I care about that are being cut off from the page?

178
00:13:28,407 --> 00:13:32,719
And, what do you think the most reasonable path is to solving this problem?

179
00:13:32,719 --> 00:13:37,275
Should I change the page size, or orientation, or move the header and footer?

180
00:13:37,275 --> 00:13:38,514
Help me solve it.

181
00:13:38,514 --> 00:13:42,613
Here’s a dialog box for the photo merge feature of Adobe’s Photoshop elements, 

182
00:13:42,613 --> 00:13:45,234
which is a very cool feature if you set it up right.

183
00:13:45,234 --> 00:13:49,656
However you need to specify multiple photos as input from the project bin.

184
00:13:49,656 --> 00:13:54,702
And this is something that the dialog box actually could do a better job of leading you through.

185
00:13:54,702 --> 00:14:00,587
It could then say let me show you and it could highlight the project bin on the screen or something like that.

186
00:14:00,587 --> 00:14:05,135
Here are two screenshots from eBay Unless we have an interesting approach, 

187
00:14:05,135 --> 00:14:08,877
where eBay has built its own internal messaging system.

188
00:14:08,877 --> 00:14:13,229
And if for the sake of argument we decide that the right thing to do, 

189
00:14:13,229 --> 00:14:17,879
and that the internal messaging is better than directly responding to email.

190
00:14:17,879 --> 00:14:21,050
I’m not sure about that, but we’ll go with it for now.

191
00:14:21,050 --> 00:14:25,647
They’ve done a clever thing, which is, when you reply, the reply mail address says, 

192
00:14:25,647 --> 00:14:31,933
hey, use the yellow button, and in the middle of replying it you can see, oops, I made a mistake.

193
00:14:31,933 --> 00:14:35,024
That’s right I need to use the internal messaging system.

194
00:14:35,024 --> 00:14:37,274
It’s an interesting hack.

195
00:14:37,274 --> 00:14:40,274
And here’s another screenshot from e-bay 

196
00:14:40,274 --> 00:14:45,820
on the right hand side where when new functionality is introduced for example the ability 

197
00:14:45,820 --> 00:14:51,177
to compare multiple options in your card it can call that out inside the user interface.

198
00:14:51,177 --> 00:14:55,759
And I think the ability to combine help directly into the user interface 

199
00:14:55,759 --> 00:14:59,071
is one of the most exciting advances in this area.

200
00:14:59,071 --> 00:15:03,204
And it’s something that was last common in previous desktop applications.

201
00:15:03,204 --> 00:15:06,843
And here’s an example that I think is interesting.

202
00:15:06,843 --> 00:15:11,334
This is the un-subscription dialog box for a mailing list, and if you click, 

203
00:15:11,334 --> 00:15:16,017
I receive too many emails, it says wait, you can change the frequency, 

204
00:15:16,017 --> 00:15:22,260
and you have the opportunity to receive mailing list mails at a less frequent interval.

205
00:15:22,260 --> 00:15:25,500
I think that this is an actually a really nice solution, 

206
00:15:25,500 --> 00:15:29,471
because sometimes you want to receive some mail, but not too much.

207
00:15:29,471 --> 00:15:33,317
In other cases, maybe you’ll view this as harassing and you’ll wish 

208
00:15:33,317 --> 00:15:35,706
that you could just be done with this task quickly, 

209
00:15:35,706 --> 00:15:46,137
but in either case, I thought it was an interesting and creative solution.

210
00:15:46,137 --> 00:16:17,976
[inaudible] If nobody needs to know the terms of the licensing agreement that’s very reasonable.

211
00:16:17,976 --> 00:16:21,009
But my hunch is that the reason these things exist is 

212
00:16:21,009 --> 00:16:26,042
because they have consequence of some sort the user should probably be informed about.

213
00:16:26,042 --> 00:16:31,723
And so if you’re designing a site that has terms for users think about is there a way that you can 

214
00:16:31,723 --> 00:16:35,395
at least summarize what the key things somebody’s agreeing 

215
00:16:35,395 --> 00:16:42,426
to are Without having them click through it or having never even seen or read a lick of the agreement at all.

216
00:16:42,426 --> 00:16:45,486
And to close on a positive note, one nice thing 

217
00:16:45,486 --> 00:16:49,124
that you can do with help on a website is to help people have fun.

218
00:16:49,124 --> 00:16:51,185
Filling out forms can often be really boring, 

219
00:16:51,185 --> 00:16:56,608
and here’s an example from a hotel website where one of the options has a little joke on the inside and 

220
00:16:56,608 --> 00:17:00,039
so that, and so that bit of levity can help increase the user experience.

