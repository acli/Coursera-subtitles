1
00:00:01,000 --> 00:00:04,044
Let’s continue our journey of these design heuristics.

2
00:00:04,044 --> 00:00:07,075
Before we do, I’d like to remind you that many of the interfaces

3
00:00:07,075 --> 00:00:11,019
that we’re going to look at could fit into multiple different heuristics,

4
00:00:11,019 --> 00:00:14,093
and the most important thing is to identify the problem:

5
00:00:14,093 --> 00:00:20,017
If you identify and fix the problem, the label is of secondary importance.

6
00:00:21,035 --> 00:00:24,053
Our next heuristic is “recognition over recall.”

7
00:00:24,053 --> 00:00:33,070
Create interfaces that make objects, actions, options, and directions visible or easily retrievable.

8
00:00:33,070 --> 00:00:38,062
And one of my favorite examples of this is [that] any time you see a Post-It note,

9
00:00:38,062 --> 00:00:45,021
that probably means that the relevant information isn’t as ready at hand as it ought to be.

10
00:00:45,021 --> 00:00:48,014
Here’s a photograph I took of one of our lunch meetings.

11
00:00:48,014 --> 00:00:51,063
And here you can see we have shwarma and falafel.

12
00:00:51,063 --> 00:00:54,002
They each have a number on them.

13
00:00:54,002 --> 00:01:00,054
And we have a code that’s used to distinguish which number means which kind of sandwich.

14
00:01:00,054 --> 00:01:05,034
And of course, the reason for this is that someone spent all their time making these delicious,

15
00:01:05,034 --> 00:01:08,043
and didn’t take the time to write out the whole label on it.

16
00:01:08,043 --> 00:01:10,093
So it’s understandable and fixable.

17
00:01:10,093 --> 00:01:15,017
But, from an interface design perspective, it would be faster to find the chicken shwarma

18
00:01:15,017 --> 00:01:21,042
if it was written directly on there, as opposed to in code.

19
00:01:24,036 --> 00:01:28,083
Here’s a screen shot of a ticket-buying website, and what you can see

20
00:01:28,083 --> 00:01:33,050
is that it gives you a couple of options like buy tickets for today or for a future day.

21
00:01:33,050 --> 00:01:37,081
There’s a couple of problems from a heuristics perspective with this screen.

22
00:01:37,081 --> 00:01:43,066
For starters — and we’ll get to this in a little bit — the layout is kind of all over the place.

23
00:01:43,066 --> 00:01:48,063
But also the thing that we’re going to look at here is the fact that we have this intermediate screen

24
00:01:48,063 --> 00:01:51,099
which I think could be done away with with clever design.

25
00:01:51,099 --> 00:01:55,039
It, for example, brings you to a page

26
00:01:55,039 --> 00:02:00,051
that offers up show times for today and offers you a dialog box to switch the day.

27
00:02:00,051 --> 00:02:05,035
And so, by setting up reasonable defaults, you can avoid extra hurdles .

28
00:02:05,035 --> 00:02:10,052
In addition to leading with reasonable defaults, it can be valuable to provide previews.

29
00:02:10,052 --> 00:02:16,002
This is a screen shot of a web design tool where there are many templates available.

30
00:02:16,002 --> 00:02:22,024
However, all of the templates are shown in textural listing, which is not well suited for the task.

31
00:02:22,024 --> 00:02:28,066
You have to think through whether that’s what you want, and that’s a difficult thing to do reliably.

32
00:02:28,066 --> 00:02:35,033
By contrast this is a different web design tool that offers previews of all of the templates available,

33
00:02:35,033 --> 00:02:39,052
and it’s much easier to see if that’s the design that you’d like.

34
00:02:40,027 --> 00:02:44,004
Next up, flexibility and efficiency.

35
00:02:44,004 --> 00:02:47,011
An simple and straight forward example of this

36
00:02:47,011 --> 00:02:52,005
is to provide keyboard accelerator shortcuts and similar things like that for experts.

37
00:02:52,005 --> 00:02:55,081
This is the View menu of the Firefox web browser.

38
00:02:55,081 --> 00:03:01,044
And this is a great example of offering flexibility and support for experts in two ways.

39
00:03:01,044 --> 00:03:05,037
First, we can see that there’s keyboard shortcuts available.

40
00:03:05,037 --> 00:03:12,013
And second, the View Source menu will let you retrieve the page source of any page that you’re looking at,

41
00:03:12,013 --> 00:03:18,007
so you can look under the hood — not something that most people want to do; valuable for experts.

42
00:03:18,007 --> 00:03:20,096
This is the Expedia hotel search,

43
00:03:20,096 --> 00:03:26,018
and it does a really nice job of making the common cases quite easy to get to.

44
00:03:26,018 --> 00:03:29,000
Popular cities are shown with a radio button.

45
00:03:29,000 --> 00:03:33,014
But also, if you’d like to go to a less popular city,

46
00:03:33,014 --> 00:03:36,038
there’s a free entry field that you can type in anything that you want.

47
00:03:36,038 --> 00:03:39,056
And so this is a nice example of defaults with options.

48
00:03:39,056 --> 00:03:44,076
Flexible interfaces can also foreground and push relevant ambient information.

49
00:03:44,076 --> 00:03:47,009
This is a screen shot of BusyCal,

50
00:03:47,009 --> 00:03:52,036
which will allow you to view the weather forecast on your weekly view of your calendar.

51
00:03:52,036 --> 00:03:57,036
Here’s another example of productivity in the user interface: This is Google’s Gmail,

52
00:03:57,036 --> 00:04:03,006
which, if you click Spam on a recipient that it knows how to unsubscribe you from,

53
00:04:03,006 --> 00:04:08,091
it will offer the opportunity to directly unsubscribe you from that email as well.

54
00:04:08,091 --> 00:04:13,093
And I think this is an example of how, if you’re going to be proactive in an interface,

55
00:04:13,093 --> 00:04:19,026
you need to do it well and offer a clear, immediate, task-relevant benefit.

56
00:04:19,026 --> 00:04:27,006
People generally don’t like proactive interfaces that distract, interrupt, break flow, or provide irrelevant information.

57
00:04:27,006 --> 00:04:33,072
Another nice example of support for richer use is to offer recommendations on a particular page.

58
00:04:33,072 --> 00:04:39,044
And so here you can see if you like this one beverage here, [there are] other beverages you might like.

59
00:04:44,036 --> 00:04:49,092
And again, if you’re going to offer recommendations, or other kinds of proactivity, keep it relevant.

60
00:04:49,092 --> 00:04:53,094
This is an example from Amazon, of discussion fora for products

61
00:04:53,094 --> 00:04:58,008
that are almost entirely unrelated to the product that is being shown.

62
00:04:58,008 --> 00:05:01,066
And it just distracts from the user’s main goal — Mostly they’re wondering

63
00:05:01,066 --> 00:05:06,090
“Why on earth did these things end up at the bottom of some completely unrelated webpage?”

64
00:05:06,090 --> 00:05:12,098
And finally, [while] flexibility can be incredibly valuable, it is possible to go overboard.

65
00:05:12,098 --> 00:05:17,094
This is a photograph from Bill Moggridge who shows an interview with a user

66
00:05:17,094 --> 00:05:24,060
who had hacked their remote control to limit it to just the relevant functionality that they needed.

67
00:05:24,060 --> 00:05:31,021
And so, flexibility can sometimes be at tension with minimalism.

68
00:05:31,021 --> 00:05:36,077
Our eighth heuristic is “aesthetic and minimalist design.”

69
00:05:36,077 --> 00:05:42,019
When people view your webpage, for example, they’re viewing it on a screen,

70
00:05:42,019 --> 00:05:47,049
and so they see not the entire page, but one screen’s worth at a given time.

71
00:05:47,049 --> 00:05:51,090
What they see is what’s called “above the fold” — it comes from newspapers.

72
00:05:51,091 --> 00:05:55,048
Here’s an example of a screen where the relevant information —

73
00:05:55,048 --> 00:06:00,005
what the weather forecast is — is not even visible anywhere above the fold.

74
00:06:00,005 --> 00:06:03,091
Everything above the fold is all of the chrome and extra stuff,

75
00:06:03,091 --> 00:06:07,003
but the core information you have to scroll down for.

76
00:06:07,003 --> 00:06:10,095
And to the extent that you’re trying to optimize for user experience,

77
00:06:10,095 --> 00:06:18,012
it would be better to have the core information above the fold.

78
00:06:18,012 --> 00:06:24,021
As we’ll talk about in visual design, if you’re going to use color and other cues,

79
00:06:24,021 --> 00:06:27,062
have them mean something, and do so judiciously.

80
00:06:27,062 --> 00:06:32,015
Here’s an example of a check out page that’s using lots of different colors,

81
00:06:32,015 --> 00:06:40,001
and has a real cacophony in terms of its hierarchical organization on screen, for no apparent purpose.

82
00:06:40,001 --> 00:06:43,080
And here’s a screen shot from Google’s help system.

83
00:06:43,080 --> 00:06:48,093
Google is often thought of as an example of minimalist design and they often do this quite well.

84
00:06:48,093 --> 00:06:54,004
I wanted to show one example where, I think, some more information could be stripped out,

85
00:06:54,004 --> 00:06:56,088
or rather some more noise could be stripped out.

86
00:06:56,088 --> 00:07:00,058
And what I’m looking at in particular is this stuff here,

87
00:07:00,058 --> 00:07:06,027
where all of the table borders and other stuff are what you most see,

88
00:07:06,027 --> 00:07:11,014
whereas what you actually most care about is the data in the survey,

89
00:07:11,014 --> 00:07:15,064
and so, if you get rid of all of the extra lines and chart junk,

90
00:07:15,064 --> 00:07:20,003
it can be clearer to see the parts that you cared the most about.

91
00:07:21,080 --> 00:07:26,060
Here’s a log in screen that I think does a nice job of keeping the email address only in one place

92
00:07:26,060 --> 00:07:30,043
because it’s right up top here, and then you get to say

93
00:07:30,043 --> 00:07:34,020
whether or not you’re a returning customer or a new customer.

94
00:07:34,020 --> 00:07:38,031
If you’re a returning customer you enter your password; or if you’re a new customer,

95
00:07:38,031 --> 00:07:46,059
like the screen shows here, you create a new password and then type it in and go on from there.

96
00:07:46,059 --> 00:07:50,040
By contrast, this flight search website has the exact same information —

97
00:07:50,040 --> 00:07:53,067
number of stops — in two separate places.

98
00:07:53,067 --> 00:07:56,062
And it’s possible that this increased clarity.

99
00:07:56,062 --> 00:08:02,066
However, there is a cost of complexity, and there’s also a cost of vertical screen real estate,

100
00:08:02,066 --> 00:08:07,019
where by listing the same thing twice, you’re pushing other stuff down.

101
00:08:07,019 --> 00:08:12,064
Often by being dynamic about what you show or figuring out how to show things just once,

102
00:08:12,064 --> 00:08:20,028
you can have all of the relevant information fit more clearly and in a less cluttered way on the screen.

103
00:08:20,028 --> 00:08:27,076
One of the easiest conceits to make as a design team is that the people using your site will care as deeply

104
00:08:27,076 --> 00:08:33,026
and will want to spend as much time using the site as you’ve spent building the site.

105
00:08:33,026 --> 00:08:37,038
And so it can be easy to have feature creep and lots of bells and whistles and doodads.

106
00:08:37,038 --> 00:08:39,087
But that’s not necessarily what people want.

107
00:08:39,087 --> 00:08:45,056
Here’s an example of a student loan website that offers you the ability to add widgets to your home screen.

108
00:08:45,056 --> 00:08:50,087
Now this is the kind of site that you log in to probably a couple times a year? [laugh]

109
00:08:50,087 --> 00:08:56,033
It’s not likely to be a site that you’re going to want to festoon with all sorts of gadgets.

110
00:08:56,033 --> 00:09:02,070
Next let’s talk about helping users recognize, diagnose, and recover from errors.

111
00:09:02,070 --> 00:09:06,040
One of the first steps of doing this is making the problem clear.

112
00:09:06,040 --> 00:09:14,039
Here’s a hotel reservation site where all it says is: “Mistake. month. back.”

113
00:09:14,039 --> 00:09:18,035
It’s hard to know what to do.

114
00:09:18,035 --> 00:09:22,071
Here’s one that’s a little bit better: It’s a registration site for an event.

115
00:09:22,071 --> 00:09:27,010
And what we see here is that it says you must fill out all the required fields.

116
00:09:27,010 --> 00:09:31,050
Okay, that’s a little better. But which fields didn’t I fill out?

117
00:09:31,050 --> 00:09:37,019
This page is screens and screens long; there’s lots and lots of things that need to be checked.

118
00:09:37,019 --> 00:09:41,041
Which of the myriad things on this page did I forget to check?

119
00:09:41,041 --> 00:09:46,012
Maybe you could show me just a page that has the one or two things forgotten

120
00:09:46,012 --> 00:09:51,047
rather than the whole pile of stuff and force me to scroll through it again.

121
00:09:51,047 --> 00:09:57,041
Here’s a dialog box that shows the error and explains it clearly,

122
00:09:57,041 --> 00:10:00,045
but it doesn’t offer you much in terms of solving the problem.

123
00:10:00,045 --> 00:10:04,002
It says that there’s not enough space on your iPod. Too bad.

124
00:10:04,002 --> 00:10:09,066
A more effective solution would be to offer some view into what’s taking up all the space,

125
00:10:09,066 --> 00:10:14,073
or to offer reasonable ways of limiting the amount of media

126
00:10:14,073 --> 00:10:17,048
that you’re trying to put on the device so that it can all fit.

127
00:10:17,048 --> 00:10:23,062
And in this particular case, more recent versions of this application handle this problem better.

128
00:10:23,062 --> 00:10:31,097
A common mistake in writing error messages is to offer one dialog box for all of the possibilities.

129
00:10:31,097 --> 00:10:37,006
Here’s a screen shot of trying to open a file where it doesn’t know the file type.

130
00:10:37,006 --> 00:10:41,066
And it says, “The application that you chose (‘(null)’), could not found.

131
00:10:41,066 --> 00:10:45,069
Check the file name or choose another application.”

132
00:10:45,069 --> 00:10:50,030
Well this would be a whole lot better if we were speaking the user’s language:

133
00:10:50,030 --> 00:10:52,021
“Null” may not be the best choice.

134
00:10:52,021 --> 00:10:58,025
And also if we offered up a reasonable application for that file type.

135
00:10:58,025 --> 00:11:02,010
A lot of common tasks on the web are search-based tasks.

136
00:11:02,010 --> 00:11:05,004
So here’s a screenshot from searching for a flight,

137
00:11:05,004 --> 00:11:08,077
where the constraint specified yielded no possible solution.

138
00:11:08,077 --> 00:11:13,081
For complex search tasks. if a user specifies an unreasonable set of constraints,

139
00:11:13,081 --> 00:11:16,099
one of the most powerful things that you can do as a designer

140
00:11:16,099 --> 00:11:22,061
is to offer a relaxation of those constraints that makes this more workable.

141
00:11:22,061 --> 00:11:27,040
Many years ago, I worked with Chuck Rich at Mitsubishi Research in Boston.

142
00:11:27,040 --> 00:11:30,055
And he was working on a research system called Collagen

143
00:11:30,055 --> 00:11:34,004
that would find ways to intelligently relax these constraints —

144
00:11:34,004 --> 00:11:37,057
among other things — to help users get their work done better.

145
00:11:37,057 --> 00:11:42,034
And this kind of smart relaxation can be a really powerful technique.

146
00:11:42,034 --> 00:11:45,073
I wanted to end talking about errors on a good note.

147
00:11:45,073 --> 00:11:50,048
Here’s a web browser dialog box that lets you know

148
00:11:50,048 --> 00:11:54,039
if you go to a URL that it believes to be suspect,

149
00:11:54,039 --> 00:11:57,059
it will let you know that you probably don’t want to be here,

150
00:11:57,059 --> 00:12:03,003
and it offers to get you out of here and explain more about why this webpage was blocked.

151
00:12:03,003 --> 00:12:08,007
There’s probably future further innovations that can happen in this kind of error work.

152
00:12:08,007 --> 00:12:13,056
But I think that this is a pretty good darn start and a lot better than the way things used to be.

153
00:12:13,056 --> 00:12:19,032
And that brings us to our last heuristic, which is better help and documentation.

154
00:12:19,032 --> 00:12:25,060
It can be easy to think about help as somebody else’s problem and not part of the real app.

155
00:12:25,060 --> 00:12:31,000
Fortunately, I think on the web, help and documents have become more integrated.

156
00:12:31,000 --> 00:12:37,030
One of my favorite examples for this is learning programming systems where websites like PHP, .NET

157
00:12:37,030 --> 00:12:41,078
can help you learn programming systems by providing examples.

158
00:12:41,078 --> 00:12:45,039
Here’s another example-driven strategy from UPS’s website.

159
00:12:45,039 --> 00:12:50,057
It offers you the opportunity to subscribe to a number of mailing lists.

160
00:12:50,057 --> 00:12:53,085
And if you wonder what each of these mailing lists might give you,

161
00:12:53,085 --> 00:12:56,021
on another screen I’ve batched them together here.

162
00:12:56,021 --> 00:13:01,056
It will show you examples from each of those mailing lists of the content you are likely to receive.

163
00:13:01,056 --> 00:13:04,006
That’s a really powerful kind of preview strategy.

164
00:13:04,006 --> 00:13:08,082
And here is an example of a print dialog box to tell you what the problem is,

165
00:13:08,082 --> 00:13:11,066
but doesn’t help you find the solution.

166
00:13:11,066 --> 00:13:17,085
For starters, I think somebody wants to know, is the stuff that’s outside the margins relevant?

167
00:13:17,085 --> 00:13:22,081
Is it just formally outside the margins, but nothing’s actually getting cut off?

168
00:13:22,081 --> 00:13:27,019
or is there important document parts that I care about that are being cut off from the page?

169
00:13:27,019 --> 00:13:31,008
And, what do you think the most reasonable path is to solving this problem?

170
00:13:31,008 --> 00:13:39,014
Should I change the page size, or orientation, or move the header and footer? Help me solve it!

171
00:13:39,014 --> 00:13:43,073
Here’s a dialog box for the photo merge feature of Adobe’s Photoshop Elements,

172
00:13:43,073 --> 00:13:46,031
which is a very cool feature if you set it up right.

173
00:13:46,031 --> 00:13:50,024
However, you need to specify multiple photos as input from the project bin.

174
00:13:50,024 --> 00:13:54,070
And this is something that the dialog box actually could do a better job of leading you through.

175
00:13:54,070 --> 00:14:00,058
It could then say let me show you and it could highlight the project bin on the screen or something like that.

176
00:14:00,058 --> 00:14:04,004
Here are two screenshots from eBay.

177
00:14:04,004 --> 00:14:08,087
On the left we have an interesting approach, where eBay has built its own internal messaging system.

178
00:14:08,087 --> 00:14:13,022
And if, for the sake of argument, we decided that’s the right thing to do,

179
00:14:13,022 --> 00:14:17,087
and that the internal messaging is better than directly responding to email —

180
00:14:17,087 --> 00:14:21,004
I’m not sure about that, but we’ll go with it for now —

181
00:14:21,004 --> 00:14:25,064
they’ve done a clever thing, which is, when you reply, the reply mail address says,

182
00:14:25,064 --> 00:14:31,076
“Hey, use the yellow button,” and in the middle of replying it, you can see, “Oops, I made a mistake.

183
00:14:31,076 --> 00:14:35,002
That’s right… I need to use the internal messaging system.”

184
00:14:35,002 --> 00:14:37,033
It’s an interesting hack.

185
00:14:37,035 --> 00:14:41,012
And here’s another screenshot from eBay, on the right hand side,

186
00:14:41,012 --> 00:14:44,040
where when new functionality is introduced —

187
00:14:44,040 --> 00:14:48,006
for example the ability to compare multiple options in your card —

188
00:14:48,006 --> 00:14:51,017
it can call that out inside the user interface.

189
00:14:51,017 --> 00:14:55,075
And I think the ability to combine help directly into the user interface

190
00:14:55,075 --> 00:14:58,079
is one of the most exciting advances in this area.

191
00:14:58,079 --> 00:15:03,020
And it’s something that was less common in previous desktop applications.

192
00:15:03,020 --> 00:15:06,084
And here’s an example that I think is interesting.

193
00:15:06,084 --> 00:15:12,048
This is the unsubscription dialog box for a mailing list,

194
00:15:12,048 --> 00:15:16,001
and if you click “I receive too many emails,”

195
00:15:16,001 --> 00:15:19,035
it says “Wait, you can change the frequency,”

196
00:15:19,035 --> 00:15:23,079
and you have the opportunity to receive mailing list mails at a less frequent interval.

197
00:15:23,079 --> 00:15:26,074
I think that this is an actually a really nice solution,

198
00:15:26,074 --> 00:15:29,071
because sometimes you want to receive some mail, but not too much.

199
00:15:29,071 --> 00:15:32,084
In other cases, maybe you’ll view this as harassing

200
00:15:32,084 --> 00:15:35,070
and you’ll wish that you could just be done with this task quickly,

201
00:15:35,070 --> 00:15:40,042
but in either case, I thought it was an interesting and creative solution.

202
00:15:40,042 --> 00:15:43,073
I think it’s really important that help be sincere,

203
00:15:43,073 --> 00:15:47,094
and there’s one class of help and additional information

204
00:15:47,094 --> 00:15:54,045
that I think is, at least in effect, not providing users with the information that they need,

205
00:15:54,045 --> 00:15:57,074
and that’s EULA’s, or end-user licensing agreements.

206
00:15:57,074 --> 00:16:05,056
Here’re two examples of EULA screens where it’s very easy to click through without ever read the EULA.

207
00:16:05,056 --> 00:16:13,002
And my hunch is that nearly all users do click through without reading the EULA.

208
00:16:13,002 --> 00:16:17,057
If nobody needs to know the terms of the licensing agreement, that’s very reasonable,

209
00:16:17,057 --> 00:16:20,071
but my hunch is that the reason these things exist is

210
00:16:20,071 --> 00:16:25,050
because they have consequence of some sort the user should probably be informed about.

211
00:16:25,050 --> 00:16:28,070
And so if you’re designing a site that has terms for users,

212
00:16:28,070 --> 00:16:34,096
think about “Is there a way that you can at least summarize what the key things somebody’s agreeing to are”

213
00:16:34,096 --> 00:16:42,042
without having them click through it or having never even seen or read a lick of the agreement at all.

214
00:16:42,042 --> 00:16:45,048
And to close on a positive note, one nice thing

215
00:16:45,048 --> 00:16:49,012
that you can do with help on a website is to help people have fun.

216
00:16:49,012 --> 00:16:51,018
Filling out forms can often be really boring,

217
00:16:51,018 --> 00:16:55,057
and here’s an example from a hotel website where one of the options has a little joke on the inside,

218
00:16:55,057 --> 00:17:00,003
and so that bit of levity can help increase the user experience.
